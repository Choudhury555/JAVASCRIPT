<!-- RegExp I: Basics (Literals, Classes, Quantifiers) -->

What is a Regular Expression?
-A RegExp (Regular Expression) defines a pattern to match text.
-You can use it to search, validate, or extract parts of strings.


<!-- Character Classes -->
Pattern     Meaning                                      Example Matches       Example Non-Matches
-------     --------------------------------------       --------------------  ---------------------
.           Any character (except newline \n)            a, 9, @, space         \n
\d          Digit (0–9)                                  0, 5, 9                a, @, space
\w          Word character (a–z, A–Z, 0–9, _)            a, Z, 9, _             @, -, space
\s          Whitespace (space, tab, newline, etc.)       space, \t, \n          a, 1, @
\D          Not a digit                                  a, @, space            0, 5, 9
\W          Not a word character                         @, -, space            a, Z, 9, _
\S          Not a whitespace                             a, 1, @                space, \t, \n


<!-- Anchors -->
Pattern	      Meaning
-------       ---------------
^	          start of string
$	          end of string



<!-- Quantifiers -->

Symbol	           Meaning	            Example
-------            ---------------      -----------------------------
*	               0 or more	        /go*d/ → gd, god, good, goood
+	               1 or more	        /go+d/ → god, good, goood
?	               0 or 1	            /colou?r/ → color, colour
{n}	               exactly n	        /\d{3}/ → 123
{n,}	           n or more	        /\d{2,}/ → 12, 12345
{n,m}	           between n and m	    /\d{2,4}/ → 12, 1234



<!-- Flags (Modifiers) -->

Flag	  Meaning
----      -------------------------
g	      global (find all matches)
i	      case-insensitive
m	      multiline


<!-- Grouping & Escaping -->
-Use () for groups, and \ to escape special characters.